; Geometry Module - Tutorial Example
; This module demonstrates how to create reusable code modules

; === CONSTANTS ===
(define pi 3.14159265359)

; === BASIC SHAPES ===

; Square functions
(define square-area (fn [side] (* side side)))
(define square-perimeter (fn [side] (* 4 side)))

; Rectangle functions
(define rectangle-area (fn [width height] (* width height)))
(define rectangle-perimeter (fn [width height] (* 2 (+ width height))))

; Circle functions
(define circle-area (fn [radius] (* pi (* radius radius))))
(define circle-circumference (fn [radius] (* 2 pi radius)))
(define circle-diameter (fn [radius] (* 2 radius)))

; Triangle functions (assuming right triangle)
(define triangle-area (fn [base height] (/ (* base height) 2)))
(define triangle-hypotenuse (fn [a b] 
  (define a-squared (* a a))
  (define b-squared (* b b))
  (define c-squared (+ a-squared b-squared))
  ; Note: We don't have sqrt, so this is conceptual
  c-squared))

; === UTILITY FUNCTIONS ===

; Convert between units
(define inches-to-cm (fn [inches] (* inches 2.54)))
(define cm-to-inches (fn [cm] (/ cm 2.54)))

; Private helper function (not exported)
(define internal-calculation (fn [x] (* x 1.5)))

; === EXPORTS ===
; Only export the public API
(export pi 
        square-area square-perimeter
        rectangle-area rectangle-perimeter
        circle-area circle-circumference circle-diameter
        triangle-area triangle-hypotenuse
        inches-to-cm cm-to-inches) 