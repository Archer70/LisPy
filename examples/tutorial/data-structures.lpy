; Data Structures Tutorial Examples
; Run this file with: python bin/lispy_interpreter.py examples/tutorial/data-structures.lpy

; === VECTORS ===

; Creating vectors
(define numbers [1 2 3 4 5])
(define fruits ["apple" "banana" "cherry"])
(define mixed [1 "hello" true])
(define empty-vec [])

; Vector operations
(define first-number (first numbers))
(define rest-numbers (rest numbers))
(define count-numbers (count numbers))
(define with-zero (conj numbers 0))

; === HASH MAPS ===

; Creating hash maps
(define person {:name "Alice" :age 30 :city "NYC"})
(define book {"title" "LisPy Guide" "author" "Jane" "year" 2024})

; Hash map operations
(define person-name (get person :name))
(define person-age (get person :age))
(define updated-person (assoc person :job "Engineer"))
(define minimal-person (dissoc person :city))
(define person-keys (keys person))
(define person-values (vals person))

; Complex data structures
(define user-profile {
  :id 12345
  :info {:name "Bob" :email "bob@example.com"}
  :scores [85 92 78 96]
  :active true
})

(define user-name (get (get user-profile :info) :name))
(define user-scores (get user-profile :scores))
(define first-score (first user-scores))

; Display results
first-number     ; => 1
rest-numbers     ; => [2 3 4 5]
count-numbers    ; => 5
with-zero        ; => [0 1 2 3 4 5]

person-name      ; => "Alice"
person-age       ; => 30
person-keys      ; => [:name :age :city]

user-name        ; => "Bob"
first-score      ; => 85 